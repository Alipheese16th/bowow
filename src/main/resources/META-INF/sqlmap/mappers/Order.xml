<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.lec.bowow.dao.OrderDao">

	<resultMap type="Order" id="OrderResult">
		<result property="orderCode" column="orderCode"/>
		<result property="memberId" column="memberId"/>
		<result property="totalPrice" column="totalPrice"/>
		<result property="orderDate" column="orderDate"/>
		<result property="orderName" column="orderName"/>
		<result property="orderPost" column="orderPost"/>
		<result property="orderAddr1" column="orderAddr1"/>
		<result property="orderAddr2" column="orderAddr2"/>
		<result property="orderTel" column="orderTel"/>
		<!-- 상품정보 추가 -->
		<result property="productCode" column="productCode"/>
		<result property="productName" column="productName"/>
		<result property="image" column="image"/>
		<result property="cnt" column="cnt"/>
	</resultMap>
	
	<resultMap type="OrderDetail" id="OrderDetailResult">
		<result property="odno" column="odno"/>
		<result property="orderCode" column="orderCode"/>
		<result property="productCode" column="productCode"/>
		<result property="sizeNum" column="sizeNum"/>
		<result property="colorNum" column="colorNum"/>
		<result property="qty" column="qty"/>
		<result property="cost" column="cost"/>
		<!-- 상품정보 추가 -->
		<result property="productName" column="productName"/>
		<result property="productPrice" column="productPrice"/>
		<result property="productDiscount" column="productDiscount"/>
		<result property="discount" column="discount"/>
		<result property="image" column="image"/>
	</resultMap>
	
	<!-- 주문작성하기전에 주문번호 뽑아서 가기 -->
	<insert id="createOrderCode">
		INSERT INTO ORDERCODE VALUES(CONCAT(TO_CHAR(SYSDATE,'RRMMDD'),LPAD(ORDERS_SEQ.NEXTVAL,4,'0')))
	</insert>
	<select id="getOrderCode" resultType="String">
		SELECT ORDERCODE FROM ORDERCODE WHERE ROWNUM = 1 ORDER BY ORDERCODE DESC
	</select>
	
	<!-- 주문테이블입력 -->
	<insert id="insertOrder" parameterType="Order">
		INSERT INTO ORDERS (orderCode, MEMBERID, TOTALPRICE, ORDERNAME, ORDERPOST, ORDERADDR1, ORDERADDR2, ORDERTEL)
  			VALUES (#{orderCode}, #{memberId}, #{totalPrice}, #{orderName, jdbcType=VARCHAR}, #{orderPost, jdbcType=VARCHAR}, #{orderAddr1, jdbcType=VARCHAR}, #{orderAddr2, jdbcType=VARCHAR}, #{orderTel, jdbcType=VARCHAR})
	</insert>
	<!-- 주문상세입력  상품여러개면 반복해야함 -->
	<insert id="insertOrderDetail" parameterType="Cart">
		insert into orderdetail (odno, orderCode, productCode, sizeNum, colorNum, qty, cost)
  			select orderdetail_seq.nextval, #{orderCode}, c.productCode, c.sizeNum, c.colorNum, c.qty, c.cost from cart c where cartNum = #{cartNum}
	</insert>
	
	<!-- 상품 재고 업데이트 -->
	<update id="stockUpdate" parameterType="Cart">
		UPDATE PRODUCT SET PRODUCTSTOCK = PRODUCTSTOCK - #{qty} WHERE PRODUCTCODE = #{productCode}
	</update>
	
	<update id="updateMember" parameterType="Order">
		UPDATE MEMBER SET
	        MEMBERPOINT = MEMBERPOINT + (#{totalPrice} * 0.05),
	        MEMBERAMOUNT = MEMBERAMOUNT + #{totalPrice},
	        GRADENO = (SELECT G.GRADENO FROM MEMBER, MEMBERGRADE G WHERE MEMBERAMOUNT + #{totalPrice} BETWEEN LOWAMOUNT AND HIAMOUNT AND MEMBERID = #{memberId})
	    WHERE MEMBERID = #{memberId}
	</update>
	<!-- 쿠폰 사용후 삭제 -->
	<delete id="deleteCoupon" parameterType="int">
		delete from coupon where couponnum = #{couponNum}
	</delete>
		
	<!-- 주문리스트 -->
	<select id="orderList" parameterType="Order" resultMap="OrderResult">
		SELECT * FROM (
			SELECT ROWNUM RN, A.* FROM 
			  (SELECT O.*, P.PRODUCTNAME, P.PRODUCTCODE, I.IMAGE, (SELECT COUNT(*) FROM ORDERDETAIL WHERE ORDERCODE = O.ORDERCODE) CNT 
			    FROM ORDERS O, ORDERDETAIL OD, IMAGE I, PRODUCT P 
			    WHERE O.ORDERCODE = OD.ORDERCODE AND OD.PRODUCTCODE = P.PRODUCTCODE AND OD.PRODUCTCODE = I.PRODUCTCODE(+) AND (TYPE = 'title' OR I.PRODUCTCODE IS NULL) AND MEMBERID = #{memberId} ORDER BY ORDERDATE DESC) A
			) WHERE RN BETWEEN #{startRow} AND #{endRow}
	</select>
	<select id="totCntOrder" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM ORDERS WHERE MEMBERID = #{memberId}
	</select>
	
	<!-- 주문상세보기 -->
	<select id="contentOrder" parameterType="String" resultType="Order">
		SELECT * FROM ORDERS WHERE ORDERCODE = #{orderCode}
	</select>
	<select id="contentOrderDetail" parameterType="String" resultMap="OrderDetailResult">
		SELECT OD.*, P.*, I.IMAGE, (PRODUCTPRICE*(PRODUCTDISCOUNT * 0.01)*NVL(QTY,0))DISCOUNT
		  FROM ORDERDETAIL OD, PRODUCT P, IMAGE I
		  WHERE OD.PRODUCTCODE = P.PRODUCTCODE 
		    AND OD.PRODUCTCODE = I.PRODUCTCODE(+) 
		    AND (TYPE = 'title' OR I.PRODUCTCODE IS NULL)
		    AND OD.ORDERCODE = #{orderCode}
	</select>
	<select id="orderdetailDiscount" parameterType="String" resultType="int">
		SELECT SUM((PRODUCTPRICE*(PRODUCTDISCOUNT * 0.01)*NVL(QTY,0)))DISCOUNT 
			FROM ORDERDETAIL OD, PRODUCT P WHERE OD.PRODUCTCODE = P.PRODUCTCODE AND ORDERCODE = #{orderCode} 
	</select>
	
	<!-- 일별 매출통계 -->
	<select id="salesOfDate" resultType="int">
		<![CDATA[
		SELECT NVL(SUMTOTAL, 0) FROM 
		  (SELECT TO_DATE(ORDERDATE) ORDERDATE, SUM(TOTALPRICE) SUMTOTAL FROM ORDERS 
		    WHERE ORDERDATE BETWEEN SYSDATE-15 AND SYSDATE
		    GROUP BY TO_DATE(ORDERDATE)
		    ORDER BY ORDERDATE) A, 
		  (SELECT TO_DATE(SYSDATE-14 + LEVEL - 1) AS dt
		    FROM dual 
		        CONNECT BY LEVEL <= 14) B
		  WHERE A.ORDERDATE(+)=B.DT
		  ORDER BY DT
		]]>
	</select>
	<!-- <select id="salesOfDate" resultType="date">
		select 
		        to_Date(TO_CHAR(orderdate, 'RRMMDD')) as orderdate
		    from orders
		        GROUP BY to_Date(TO_CHAR(orderdate, 'RRMMDD'))
	</select>
	<select id="sumTotalOfDate" resultType="int">
		select 
		        sum(totalprice) as sumTotal
		    from orders
		        GROUP BY to_Date(TO_CHAR(orderdate, 'RRMMDD'))
	</select> -->
	
	<!-- 카테고리별 매출통계 -->
	<!-- <select id="salesOfCategory" resultMap="OrderResult">
		select category, sum(cost) sumTotal from orderdetail od, product p where od.productcode = p.productcode group by category
	</select> -->
	<select id="salesOfCategory" resultType="String">
		select category from orderdetail od, product p where od.productcode = p.productcode group by category
	</select>
	<select id="sumTotalOfCategory" resultType="int">
		select sum(cost) sumTotal from orderdetail od, product p where od.productcode = p.productcode group by category
	</select>
	
</mapper>